name: ci-pr
run-name: ${{ github.head_ref || github.ref_name }}-ci-pr

on: # yamllint disable-line rule:truthy
  pull_request:
    paths-ignore:
      - "**.jpg"
      - "**.png"
  workflow_dispatch:


concurrency:
  group: ci-pr-${{ github.event.number }}
  cancel-in-progress: true


jobs:

  setup-dotnet:
    name: "🔧 Setup .NET"
    runs-on: "ubuntu-24.04"
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-dotnet@v4
        with:
          global-json-file: "global.json"

  compile:
    name: "🔨 Compile Projects"
    needs: setup-dotnet
    runs-on: "ubuntu-24.04"
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: "global.json"

      - name: "Build Projects"
        run: |
          dotnet restore
          dotnet build

      - name: "Cache Build Output"
        uses: actions/cache@v4
        with:
          path: |
            **/obj
            **/bin
            **/.godot
            **/nupkg
            ~/.nuget/packages
          key: ${{ runner.os }}-build-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-build-${{ github.sha }}-${{ github.run_id }}

  style-check:
    name: "📝 Linting & Formatting"
    runs-on: "ubuntu-24.04"
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/formatting_checks

  example-tests:
    name: "🧪 Example Tests"
    needs: compile
    runs-on: "ubuntu-24.04"
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: "global.json"

      - name: "Restore Build Cache"
        if: ${{ !cancelled() }}
        uses: actions/cache@v4
        with:
          path: |
            **/obj
            **/bin
            **/.godot
            **/nupkg
            ~/.nuget/packages
          key: ${{ runner.os }}-build-${{ github.sha }}-${{ github.run_id }}

      - name: "Install Godot Net"
        uses: ./.github/actions/godot-install
        with:
          godot-version: "4.4.1"
          godot-mono: true
          godot-status-version: "stable"
          godot-bin-name: "linux_x86_64"
          godot-cache-path: "~/godot-linux"

      - name: "Run Tests"
        if: ${{ !cancelled() }}
        env:
          GODOT_BIN: "/home/runner/godot-linux/godot"
        shell: bash
        run: |
          chmod +x ./.github/runtests.sh
          xvfb-run --auto-servernum ./.github/runtests.sh

      - name: "Upload Test Reports"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: example_report
          path: |
            ./TestResults/*.trx
            ./TestResults/*.html

  finalize:
    if: ${{ !cancelled() }}
    runs-on: "ubuntu-24.04"
    name: Final Results
    needs: [style-check, example-tests]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
